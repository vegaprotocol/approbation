<style type="text/css">
    #filters {
        font-size: 0.9em;
        position: fixed;
        bottom: 0;
        right: 0;
        max-width: 340px;
        width: 30%;
        height: 300px;
    }

    #filters legend {
        background: #fff;
        display: block;
        border: 1px solid #000;
        margin-top: -0.5em;
        padding: 8px;
        font-size: 1.1em;
        font-weight: bold;
    }
    
    #filters fieldset {
        border: 1px solid #000;
        background: #fff;
    }

    #filters .h {
        display: inline-block;
        border-bottom: 1px dotted #000;
        position: relative;
    }

    #filters .h:before {
        content: attr(data-hover);
        visibility: hidden;
        opacity: 0;
        width: 200px;
        background-color: black;
        color: #fff;
        text-align: center;
        border-radius: 5px;
        padding: 5px 5px;
        transition: opacity 0.2s ease-in-out;
        font-size: 0.9em;

        position: absolute;
        z-index: 1;
        left: -235px;
        top: 0;
    }

    #filters .h:hover:before {
        opacity: 1;
        visibility: visible;
    }

</style>

<script>
    function showAll() {
        document.querySelectorAll('.result').forEach(el => el.classList.remove('hide'));
    }

    function hideAll() {
        document.querySelectorAll('.result').forEach(el => el.classList.add('hide'));
    }

    function showCoveredAndUnknown() {
        hideAll();
        document.querySelectorAll('.tested.unknown').forEach(el => el.classList.remove('hide'));
    }

    function showCoveredAndFailing() {
        hideAll();
        document.querySelectorAll('.tested.fail').forEach(el => el.classList.remove('hide'));
    }

    function showMixedResults() {
        hideAll();
        document.querySelectorAll('.tested.mix').forEach(el => el.classList.remove('hide'));
    }

    function copyToClipboard(str) {
        const el = document.createElement('textarea');
        el.value = str;
        el.setAttribute('readonly', '');
        el.style.position = 'absolute';
        el.style.left = '-999px';
        document.body.appendChild(el);
        el.select();
        document.execCommand('copy');
        document.body.removeChild(el);
    };

    function copyIds(event) {
       const ids = Array.from(document.querySelectorAll('tr:not(.hide) td.code')).map(el => el.getAttribute('data-code')).join('\r\n- [ ] ') 
       copyToClipboard(ids)

       const el = document.getElementById('copy-button')
       el.textContent = 'ðŸ“‹ Copied'
       el.disabled = true

       setTimeout(() => {
        el.textContent = 'Copy visible IDs'
        el.disabled = false
       }, 1000)

       event && event.preventDefault();
       return false
    }

    function initialise() {
        const t = document.querySelectorAll('.result').length;
        document.getElementById('allCount').textContent = `${t} - 100%`

        const unknown = document.querySelectorAll('.result.tested.unknown').length 
        document.getElementById('unknownCount').textContent = showCount(t, unknown)  

        const fail = document.querySelectorAll('.result.tested.fail').length
        document.getElementById('failingCount').textContent = showCount(t, fail)  

        const mix = document.querySelectorAll('.result.tested.mix').length
        document.getElementById('mixedCount').textContent = showCount(t, mix)  
    }

    function showCount(total, count) {
        return `${count} - ${pct(total, count)}`
    }

    function pct(total, count) {
        if (!total || !count) {
            return '?%'
        }

        return `${Math.round(Number(count) / Number(total) * 100, 2)}%`
    }

    document.addEventListener("DOMContentLoaded", (event) => {
        document.getElementById('filter-form').addEventListener('submit', function (e) {
            e.preventDefault();
            return false
        })

        document.getElementById('copy-button').addEventListener('click', copyIds)
        const s = document.getElementById('showAll')
        document.getElementById('unknown').addEventListener('click', showCoveredAndUnknown)
        document.getElementById('failing').addEventListener('click', showCoveredAndFailing)
        document.getElementById('mixed').addEventListener('click', showMixedResults)

        initialise()

        // Hacky reselect radio on load
        document.querySelector('#filters :checked').click()
    })
</script>

<div id="filters">
    <form id="filter-form"> 
        <fieldset>
            <legend>Show only</legend>
                <p>
                    <label id="showAll"><input type="radio" name="filter" value="all" checked /> 
                    <span class="h" data-hover="Show all of the Acceptance Criteria regardless of test coverage or source">
                        Show all
                    </span> (<span id="allCount">0</span>)</label
                </p>
                <p>
                    <label id="unknown"><input type="radio" name="filter" value="unk" />
                    <span class="h" data-hover="Show only Acceptance Criteria which are 'covered' but have no passing or failing test results">
                        Covered and unknown
                    </span> (<span id="unknownCount">0</span>)</label
                </p>
                <p>
                    <label id="failing"><input type="radio" name="filter" value="fai" />
                    <span class="h" data-hover="Show only Acceptance Criteria which are covered only by failing tests">
                        Covered and failing
                    </span> (<span id="failingCount">0</span>)</label
                </p>
                <p>
                    <label id="mixed"><input type="radio" name="filter" value="fai" />
                    <span class="h" data-hover="Show only Acceptance Criteria with multiple tests, some failing some passing">
                        Mixed pass/fail
                    </span> (<span id="mixedCount">0</span>)</label>
                </p>
                <p>
                    <button id="copy-button">Copy visible IDs</button>
                </p>
            </legend>
        </fieldset>
    </form>
</div>